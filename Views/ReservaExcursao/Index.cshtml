@model PagedList.IPagedList<ReserveSystem.Models.ReservaExcursaoModel>
@using PagedList.Mvc
<link rel="stylesheet" href="~/css/ViewsGrupo10.css" />
@{
    ViewData["Title"] = "Reservas";
}
<div class=" top-0 start-0 bg-cover position-absolute bgImage" style="background-image: url('/images/ReservaExcursao.jpg');">
    <div class="filter"></div>
</div>
<div class="container mt-4">
        @using (Html.BeginForm("Index", "ReservaExcursao", FormMethod.Get))
        {
            <div class="d-flex justify-content-between align-items-center mb-2">
                <h1 class="text-primary">@ViewData["Title"]</h1>
                <div class="d-flex justify-content-center w-50 mx-auto">
                    <a asp-action="Index" class="btn btn-link ms-2" title="Limpar Filtro">
                        <i class="bi bi-x-circle" style="font-size: 1.5rem; color: #dc3545;"></i>
                    </a>
                    @Html.DropDownList("filterBy",
                             new SelectList(new[] {
                new { Value = "titulo", Text = "Título da Excursão" },
                new { Value = "cliente", Text = "Nome do Cliente" },
                new { Value = "data", Text = "Data da Reserva" }
                }, "Value", "Text", ViewBag.FilterBy),
                             new { @class = "form-select me-2 w-100", style = "max-width: 100%;" })
                    <input type="text" class="form-control" name="searchString" placeholder="Pesquisar..." style="max-width: 200px;" value="@ViewBag.SearchString" />
                    <button class="btn btn-primary ms-2" type="submit">Filtrar</button>

                </div>
                <a asp-action="Create" class="btn btn-success">Criar Nova</a>
            </div>
        }

        @if (ViewBag.ErrorMessage != null)
        {
            <div class="alert alert-danger mt-2">
                @ViewBag.ErrorMessage
            </div>
        }

        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success mt-2">
                @TempData["SuccessMessage"]
            </div>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger mt-2">
                @TempData["ErrorMessage"]
            </div>
        }

        @using (Html.BeginForm("BulkDelete", "ReservaExcursao", FormMethod.Post))
        {
            <div class="text-end mb-2">
                <button type="submit" style="background: none; border: none; padding: 0; cursor: pointer;">
                    <i class="bi bi-trash text-danger" style="font-size: 2rem;" title="Eliminar Selecionados"></i>
                </button>
            </div>

            <div class="row">
                @foreach (var item in Model)
                {
                    <div class="col-md-4 mb-4">
                        <div class="card">
                            <div class="card-header d-flex justify-content-between align-items-center">
                                <div class="d-flex justify-content align-items-center">
                                    <input type="checkbox" name="selectedIds" value="@item.Id" />
                                    <h5 class="card-title ms-3">@item.Excursao.Titulo</h5>
                                </div>

                                <a asp-action="Delete" asp-route-id="@item.Id">
                                    <i class="bi bi-trash text-danger " style="font-size: 1.5rem;" title="Eliminar "></i>
                                </a>
                            </div>
                            <div class="card-body">

                                <p class="card-text"><strong>Cliente:</strong> @item.Cliente.Nome</p>
                                <p class="card-text"><strong>Data da Reserva:</strong> @item.DataReserva</p>
                                <p class="card-text"><strong>Número de Pessoas:</strong> @item.NumPessoas</p>
                                <p class="card-text"><strong>Valor Total:</strong> @item.ValorTotal</p>
                            </div>
                            <div class="card-footer text-center">


                                <a asp-action="Edit" asp-route-id="@item.Id " class="mx-2 text-decoration-none">
                                    <i class="bi bi-pencil-fill text-primary " style="font-size: 1.5rem;" title="Eliminar "></i>
                                </a>
                                <a asp-action="Details" asp-route-id="@item.Id" class="mx-2 text-decoration-none">
                                    <i class="bi bi-info-circle-fill text-black " style="font-size: 1.5rem;" title="Eliminar "></i>
                                </a>
                                <a asp-action="Favorita" asp-route-id="@item.Id" class="mx-2 text-decoration-none">
                                    <i class="bi bi-star-fill text-warning " style="font-size: 1.5rem;" title="Eliminar "></i>
                                </a>
                            </div>
                        </div>
                    </div>
                }
            </div>

            <!-- DELETE BUTTON -->
        }



        @{
            string filterBy = ViewContext.HttpContext.Request.Query.ContainsKey("filterBy")
            ? ViewContext.HttpContext.Request.Query["filterBy"].ToString()
            : "";
        }

        <div class="pagination justify-content-center mt-4">
            <ul class="pagination">
                @if (Model.HasPreviousPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, filterBy = filterBy })" aria-label="Previous">
                            <i class="bi bi-arrow-left"></i>
                        </a>
                    </li>
                }
                else
                {
                    <li class="page-item disabled">
                        <span class="page-link"><i class="bi bi-arrow-left"></i></span>
                    </li>
                }

                @for (int i = 1; i <= Model.PageCount; i++)
                {
                    <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { page = i, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, filterBy = filterBy })">@i</a>
                    </li>
                }

                @if (Model.HasNextPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, filterBy = filterBy })" aria-label="Next">
                            <i class="bi bi-arrow-right"></i>
                        </a>
                    </li>
                }
                else
                {
                    <li class="page-item disabled">
                        <span class="page-link"><i class="bi bi-arrow-right"></i></span>
                    </li>
                }
            </ul>
        </div>
    </div>

