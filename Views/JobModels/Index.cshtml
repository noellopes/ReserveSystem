@model ReserveSystem.Models.JobIndexViewModel

@{
    ViewData["Title"] = "Jobs";
}

<h1>@ViewData["Title"]</h1>

<p>
    <a asp-action="Create" class="btn btn-success">Create New</a>
</p>

<form asp-action="Index" method="get" class="mb-3">
    <div class="form-group">
        <input type="text" name="searchString" class="form-control" placeholder="Search jobs..." value="@ViewData["SearchString"]" />
    </div>
    <button type="submit" class="btn btn-primary">Search</button>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Jobs.FirstOrDefault().jobID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Jobs.FirstOrDefault().jobName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Jobs.FirstOrDefault().jobDescription)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Jobs)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.jobID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.jobName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.jobDescription)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.jobID" class="btn btn-warning btn-sm">Edit</a>
                    <a asp-action="Details" asp-route-id="@item.jobID" class="btn btn-info btn-sm">Details</a>
                    <a asp-action="Delete" asp-route-id="@item.jobID" class="btn btn-danger btn-sm">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="pagination mt-3">
    @if (Model.HasPreviousPage)
    {
        <a class="btn btn-primary" asp-action="Index" asp-route-pageNumber="@(Model.CurrentPage - 1)" asp-route-searchString="@ViewData["SearchString"]">Previous</a>
    }

    @for (int i = 1; i <= Model.TotalPages; i++)
    {
        if (i == Model.CurrentPage)
        {
            <span class="btn btn-secondary">@i</span>
        }
        else
        {
            <a class="btn btn-outline-primary" asp-action="Index" asp-route-pageNumber="@i" asp-route-searchString="@ViewData["SearchString"]">@i</a>
        }
    }

    @if (Model.HasNextPage)
    {
        <a class="btn btn-primary" asp-action="Index" asp-route-pageNumber="@(Model.CurrentPage + 1)" asp-route-searchString="@ViewData["SearchString"]">Next</a>
    }
</div>

