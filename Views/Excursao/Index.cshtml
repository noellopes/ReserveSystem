@model ReserveSystem.Models.ExcursaoViewModel

@{
    ViewData["Title"] = "Excursões";
}

<div class="container mt-4">
    @using (Html.BeginForm("Index", "Excursao", FormMethod.Get))
    {
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h1 class="text-primary">@ViewData["Title"]</h1>
            <div class="d-flex justify-content-center w-50 mx-auto">
                <a asp-action="Index" class="btn btn-link ms-2" title="Limpar Filtro">
                    <i class="bi bi-x-circle" style="font-size: 1.5rem; color: #dc3545;"></i>
                </a>
                @Html.DropDownList("filterBy",
                         new SelectList(new[] {
            new { Value = "titulo", Text = "Título da Excursão" },

            new { Value = "data", Text = "Data da Excursão" }
            }, "Value", "Text", ViewBag.FilterBy),
                         new { @class = "form-select me-2 w-100", style = "max-width: 100%;" })
                <input type="text" class="form-control" name="searchString" placeholder="Pesquisar..." style="max-width: 200px;" ; value="@ViewBag.SearchString" />
                <button class="btn btn-primary ms-2" type="submit">Filtrar</button>
            </div>

            <a asp-action="Create" class="btn btn-success">Criar Nova</a>
        </div>
    }


    @if (ViewBag.ErrorMessage != null)
    {
        <div class="alert alert-danger mt-2 d-flex justify-content-between">
            @ViewBag.ErrorMessage
            <button type="button" class="btn-close text-end" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success mt-2 d-flex justify-content-between">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close text-end" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show mt-2 d-flex justify-content-between" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close text-end" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }


    @using (Html.BeginForm("BulkDelete", "ExcursaoFavorita", FormMethod.Post))
    {
        
        <div class="table-responsive bs-bg- bg-light ">


            <table class="table table-striped table-bordered">
                <thead class="table-dark">
                    <tr>
                       

                        <th>
                            Título da Excursão
                           
                        </th>
                        <th>
                            Data de Inicio
                            <a class="btn btn-link text-white p-0" href="@Url.Action("Index", new { sortOrder = ViewBag.DateSortParm })" title="Data da Excursao">

                                @if (ViewBag.CurrentSort == "date_desc")
                                {
                                    <i class="bi bi-arrow-down"></i>
                                }
                                else
                                {
                                    <i class="bi bi-arrow-up"></i>
                                }
                            </a>
                        </th>
                        <th>Data de Fim</th>
						<th>Preço
                            <a class="btn btn-link text-white p-0" href="@Url.Action("Index", new { sortOrder = ViewBag.PrecoSortParm })" title="Preco da Excursão">

                                @if (ViewBag.CurrentSort == "Preco_desc")
                                {
                                    <i class="bi bi-arrow-down"></i>
                                }
                                else
                                {
                                    <i class="bi bi-arrow-up"></i>
                                }
                            </a>
                        </th>
                       
                        <th class="text-center">Ações</th>

                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Excursao)
                    {
                        <tr>
                            <!-- Checkbox for selection -->
                            
                            <td>@Html.DisplayFor(modelItem => item.Titulo)</td>
                            
                            <td>@Html.DisplayFor(modelItem => item.Data_Inicio)</td>
                            <td>@Html.DisplayFor(modelItem => item.Data_Fim)</td>
                            <td>@Html.DisplayFor(modelItem => item.Preco)</td>
                            
                            <td class="text-center actions-btns">
                                <a asp-action="Edit" asp-route-id="@item.ExcursaoId" class="btn btn-primary btn-sm me-1">Edit</a>
                                <a asp-action="Details" asp-route-id="@item.ExcursaoId" class="btn btn-info btn-sm me-1">Details</a>
                                <a asp-action="Delete" asp-route-id="@item.ExcursaoId" class="btn btn-danger btn-sm">Delete</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>



    }

    <div class="pagination justify-content-center mt-4">
        <ul class="pagination">
            <!-- Botão para página anterior -->
            @if (Model.PagingInfo.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.PagingInfo.CurrentPage - 1, filterBy = Model.CurrentFilter, searchString = Model.SearchTitulo })">
                        <i class="bi bi-arrow-left"></i>
                    </a>
                </li>
            }

            <!-- Páginas -->
            @for (int i = Model.PagingInfo.FirstPageShow; i <= Model.PagingInfo.LastPageShow; i++)
            {
                <li class="page-item @(i == Model.PagingInfo.CurrentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = i, filterBy = Model.CurrentFilter, searchString = Model.SearchTitulo })">@i</a>
                </li>
            }

            <!-- Botão para próxima página -->
            @if (Model.PagingInfo.CurrentPage < Model.PagingInfo.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.PagingInfo.CurrentPage + 1, filterBy = Model.CurrentFilter, searchString = Model.SearchTitulo })">
                        <i class="bi bi-arrow-right"></i>
                    </a>
                </li>
            }
        </ul>
    </div>


</div>

