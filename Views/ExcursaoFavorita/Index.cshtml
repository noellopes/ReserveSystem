@model PagedList.IPagedList<ReserveSystem.Models.ExcursaoFavoritaModel>
@using PagedList.Mvc
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css"/>


@{
    ViewData["Title"] = "Favoritas";
}

<div class="container mt-4">
    @using (Html.BeginForm("Index", "ExcursaoFavorita", FormMethod.Get))
    {
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h1 class="text-primary">@ViewData["Title"]</h1>
            <div class="d-flex justify-content-center w-50 mx-auto">
                <a asp-action="Index" class="btn btn-link ms-2" title="Limpar Filtro">
                    <i class="bi bi-x-circle" style="font-size: 1.5rem; color: #dc3545;"></i>
                </a>
                <select class="form-select me-2" name="filterBy" style="max-width: 150px;">
                    <option value="titulo">Título da Excursão</option>
                    <option value="data">Data da Excursão</option>
                </select>
                <input type="text" class="form-control" name="searchString" placeholder="Pesquisar..." style="max-width: 200px;" />
                <button class="btn btn-primary ms-2" type="submit">Filtrar</button>
            </div>
            <a asp-action="Create" class="btn btn-success">Criar Nova</a>
        </div>
    }

    <div class="table-responsive">
        <table class="table table-striped table-bordered">
            <thead class="table-dark">
                <tr>
                    
                    <th>
                        Cliente
                        <a href="@Url.Action("Index", new { sortOrder = ViewBag.TituloSortParm })" class="btn btn-link text-white p-0" title="Ordenar por Excursão">
                            <i class="bi bi-arrow-down-up" style="font-size: 1.2rem;"></i>
                        </a>
                    </th>
                    <th>
                        Data Reserva
                        <a href="@Url.Action("Index", new { sortOrder = ViewBag.DateSortParm })" class="btn btn-link text-white p-0" title="Ordenar por Data">
                            <i class="bi bi-arrow-down-up" style="font-size: 1.2rem;"></i>
                        </a>
                    </th>

                    <th>Comentário à Excursão</th>
                    
                    <th class="text-center">Ações</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.Excursao.Titulo)</td>
                        <td>@Html.DisplayFor(modelItem => item.Excursao.Data_Fim)</td>
                        <td>@Html.DisplayFor(modelItem => item.Comentario)</td>
                        
                        <td class="text-center actions-btns">
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary btn-sm me-1">Edit</a>
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm me-1">Details</a>
                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="pagination justify-content-center mt-4">
        <ul class="pagination">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })" aria-label="Previous">
                        <i class="bi bi-arrow-left"></i>
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link"><i class="bi bi-arrow-left"></i></span>
                </li>
            }

            @for (int i = 1; i <= Model.PageCount; i++)
            {
                <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = i, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })">@i</a>
                </li>
            }

            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })" aria-label="Next">
                        <i class="bi bi-arrow-right"></i>
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link"><i class="bi bi-arrow-right"></i></span>
                </li>
            }
        </ul>
    </div>




</div>

