@model PagedList.IPagedList<ReserveSystem.Models.ExcursaoFavoritaModel>
@using PagedList.Mvc
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css"/>


@{
    ViewData["Title"] = "Favoritas";
}

<div class="container mt-4">
    @using (Html.BeginForm("Index", "ExcursaoFavorita", FormMethod.Get))
    {
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h1 class="text-primary">@ViewData["Title"]</h1>
            <div class="d-flex justify-content-center w-50 mx-auto">
                <a asp-action="Index" class="btn btn-link ms-2" title="Limpar Filtro">
                    <i class="bi bi-x-circle" style="font-size: 1.5rem; color: #dc3545;"></i>
                </a>
                @Html.DropDownList("filterBy",
                         new SelectList(new[] {
            new { Value = "titulo", Text = "Título da Excursão" },
            
            new { Value = "data", Text = "Data da Excursão" }
            }, "Value", "Text", ViewBag.FilterBy),
                         new { @class = "form-select me-2 w-100", style = "max-width: 100%;" })
                <input type="text" class="form-control" name="searchString" placeholder="Pesquisar..." style="max-width: 200px;"; value="@ViewBag.SearchString" />
                <button class="btn btn-primary ms-2" type="submit">Filtrar</button>
            </div>
            
            <a asp-action="Create" class="btn btn-success">Criar Nova</a>
        </div>
    }

    
    @if (ViewBag.ErrorMessage != null)
    {
        <div class="alert alert-danger mt-2">
            @ViewBag.ErrorMessage
        </div>
    }


    @using (Html.BeginForm("BulkDelete", "ExcursaoFavorita", FormMethod.Post))
    {
        <div class="table-responsive">
            <table class="table table-striped table-bordered">
                <thead class="table-dark">
                    <tr>
                        <!-- "Select All" Checkbox -->
                        <th>
                            <input type="checkbox" id="selectAll" />
                        </th>
                        <th>Cliente</th>
                        <th>Data Reserva</th>
                        <th>Comentário à Excursão</th>
                        <th class="text-center">Ações</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <!-- Checkbox for selection -->
                            <td>
                                <input type="checkbox" name="selectedIds" value="@item.Id" />
                            </td>
                            <td>@Html.DisplayFor(modelItem => item.Excursao.Titulo)</td>
                            <td>@Html.DisplayFor(modelItem => item.Excursao.Data_Fim)</td>
                            <td>@Html.DisplayFor(modelItem => item.Comentario)</td>
                            <td class="text-center actions-btns">
                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary btn-sm me-1">Edit</a>
                                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm me-1">Details</a>
                                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm">Delete</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- DELETE BUTTON -->
        <div class="text-end">
            <button type="submit" class="btn btn-danger mt-3">Delete Selected</button>
        </div>

    }

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success mt-2">
            @TempData["SuccessMessage"]
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger mt-2">
            @TempData["ErrorMessage"]
        </div>
    }



    @{
        string filterBy = ViewContext.HttpContext.Request.Query.ContainsKey("filterBy")
        ? ViewContext.HttpContext.Request.Query["filterBy"].ToString()
        : "";
    }

    <div class="pagination justify-content-center mt-4">
        <ul class="pagination">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, filterBy = filterBy })" aria-label="Previous">
                        <i class="bi bi-arrow-left"></i>
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link"><i class="bi bi-arrow-left"></i></span>
                </li>
            }

            @for (int i = 1; i <= Model.PageCount; i++)
            {
                <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = i, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, filterBy = filterBy })">@i</a>
                </li>
            }

            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, filterBy = filterBy })" aria-label="Next">
                        <i class="bi bi-arrow-right"></i>
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link"><i class="bi bi-arrow-right"></i></span>
                </li>
            }
        </ul>
    </div>



</div>

