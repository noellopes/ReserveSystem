@model ReserveSystem.Models.SchedulesViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a class="btn btn-primary" asp-action="Create">Create New</a>
    <!-- Botão para abrir o modal de pesquisa -->
    <button type="button" class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#searchModal">
        Search
    </button>
</p>

<!-- Modal de Pesquisa -->
<div class="modal fade" id="searchModal" tabindex="-1" aria-labelledby="searchModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="searchModalLabel">Search by Staff Name</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="Index" method="get">
                <div class="modal-body">
                    <div class="form-group">
                        <label for="searchName" class="control-label">Staff Name</label>
                        <input type="text" class="form-control" name="searchName" value="@Model.SearchName" placeholder="Enter Staff Name" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Search</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="row">
    @foreach (var item in Model.Schedules)
    {
        <div class="col-md-4 mb-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Shift: @Html.DisplayFor(modelItem => item.StartShiftTime) - @Html.DisplayFor(modelItem => item.EndShiftTime)</h5>
                    <p class="card-text">
                        <strong>Presence:</strong> @Html.DisplayFor(modelItem => item.isPrecense) <br />
                        <strong>Available:</strong> @Html.DisplayFor(modelItem => item.isAvailable) <br />
                        <strong>Staff:</strong> @Html.DisplayFor(modelItem => item.staff.StaffName) <br />
                        <strong>Schedule Type:</strong> @Html.DisplayFor(modelItem => item.typeOfSchedule.TypeOfScheduleDescription)
                    </p>
                    <a href="@Url.Action("Edit", "Schedules", new { id = item.SchedulesId })" class="btn btn-warning">Edit</a>
                    <a href="@Url.Action("Details", "Schedules", new { id = item.SchedulesId })" class="btn btn-info">Details</a>
                    <a href="@Url.Action("Delete", "Schedules", new { id = item.SchedulesId })" class="btn btn-danger">Delete</a>
                </div>
            </div>
        </div>
    }
</div>

<!-- Paginação -->
<nav aria-label="Schedule Pagination">
    <ul class="pagination">
        <!-- First Page Button -->
        <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", "Schedules", new { page = 1, searchName = Model.SearchName })">First</a>
        </li>

        <!-- Previous Page Button -->
        <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", "Schedules", new { page = Model.CurrentPage - 1, searchName = Model.SearchName })">Previous</a>
        </li>

        <!-- Page Number Buttons -->
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                <a class="page-link" href="@Url.Action("Index", "Schedules", new { page = i, searchName = Model.SearchName })">@i</a>
            </li>
        }

        <!-- Next Page Button -->
        <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", "Schedules", new { page = Model.CurrentPage + 1, searchName = Model.SearchName })">Next</a>
        </li>

        <!-- Last Page Button -->
        <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", "Schedules", new { page = Model.TotalPages, searchName = Model.SearchName })">Last</a>
        </li>
    </ul>
</nav>
