@model IEnumerable<ReserveSystem.Models.Schedule>

@{
    ViewData["Title"] = "Schedule List";
    var pagingInfo = (PagingInfo)ViewBag.PagingInfo;
    string searchString = ViewBag.SearchString as string;
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.StaffId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TypeOfSheduleId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StartShiftTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EndShiftTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Presence)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.StaffId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TypeOfSheduleId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartShiftTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EndShiftTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Presence)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.ScheduleId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.ScheduleId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.ScheduleId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>


<nav aria-label="Page navigation">
    <ul class="pagination">
        <!-- First and Previous -->
        @if (pagingInfo.CurrentPage > 1)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { page = 1 })">First</a>
            </li>
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { page = pagingInfo.CurrentPage - 1 })">Previous</a>
            </li>
        }

        <!-- Page Numbers -->
        @for (int i = pagingInfo.FirstPageShow; i <= pagingInfo.LastPageShow; i++)
        {
            <li class="page-item @(i == pagingInfo.CurrentPage ? "active" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
            </li>
        }

        <!-- Next and Last -->
        @if (pagingInfo.CurrentPage < pagingInfo.TotalPages)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { page = pagingInfo.CurrentPage + 1 })">Next</a>
            </li>
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { page = pagingInfo.TotalPages })">Last</a>
            </li>
        }
    </ul>
</nav>