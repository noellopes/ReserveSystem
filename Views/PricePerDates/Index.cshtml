@model IEnumerable<ReserveSystem.Models.PricePerDate>

@{
    ViewData["Title"] = "Index";
}

<style>
    body {
        font-family: 'Georgia', serif;
        background-color: #f9f9f6; /* Off-white background */
        color: #1a1a1a; /* Deep black for text */
    }

    /* Overall table styles */
    .table {
        width: 100%;
        border-collapse: collapse;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        background-color: #ffffff;
    }

        /* Table Header Styles */
        .table thead {
            background-color: #333333; /* Dark background for header */
            color: white;
        }

        /* Table row hover effect */
        .table tbody tr:hover {
            background-color: #F5F5F5; /* Hover effect color */
            color: #d4af37; /* Text color on hover */
            cursor: pointer;
        }

        /* Table cell styles */
        .table th, .table td {
            padding: 18px 20px;
            text-align: left;
            font-size: 1.125rem;
            font-weight: 500;
        }

    /* Button styles */
    .btn {
        background-color: #ffffff;
        border-color: #d4af37;
        color: #333333;
        font-weight: 600;
        padding: 14px 28px;
        border-radius: 50px;
        font-size: 1.125rem;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
    }

        .btn:hover {
            background-color: #333333;
            color: #F5F5F5;
            border-color: #333333;
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
            transform: translateY(-3px);
        }

        .btn:active {
            background-color: #000000; /* Darker effect when clicked */
            border-color: #000000;
            color: white;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Return to original shadow */
            transform: translateY(0); /* Button "presses" down */
        }


    /* Back Button Styling */
    .btn_back {
        background-color: #333333;
        border-color: #d4af37;
        color: #ffffff;
        font-weight: 600;
        padding: 14px 28px;
        border-radius: 50px;
        font-size: 1.125rem;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
    }

        .btn_back:hover {
            background-color: #ffffff;
            color: #d4af37;
            border-color: #d4af37;
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
            transform: translateY(-3px);
        }

    .hr {
        border: none;
        height: 2px;
        background-color: #d4af37; /* Gold */
        width: 60%;
        margin: 1rem auto;
        opacity: 0.8;
    }

    /* Centered title */
    h1 {
        font-size: 2rem;
        color: #d4af37; /* Gold for title */
    }

    /* Adjusting the paragraph style for centered 'Create' button */
    p {
        text-align: center;
        margin-top: 2rem;
    }

    .modal-content {
        background-color: #ffffff; /* White background */
        border-radius: 12px;
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
    }

    .modal-header {
        background-color: #333333; /* Gold */
        color: white;
        border-top-left-radius: 12px;
        border-top-right-radius: 12px;
    }

    .modal-body {
        font-size: 1.1rem;
        color: #333333;
        padding: 1.5rem;
    }

    .modal-footer {
        background-color: #f9f9f6; /* Light off-white */
        padding: 1rem;
        justify-content: center;
    }

    /* Pagination styles */
    .pagination {
        margin-top: 20px;
    }

        .pagination .page-item {
            margin: 0 5px;
        }

            .pagination .page-item .page-link {
                color: #333333;
                background-color: #ffffff; /* White background */
                border: 1px solid #d4af37; /* Gold border */
                padding: 10px 15px;
                font-weight: 600;
                border-radius: 50px;
                transition: all 0.3s ease;
            }

            .pagination .page-item.active .page-link {
                background-color: #d4af37; /* Gold background for active */
                color: #ffffff; /* White text */
                border-color: #d4af37;
            }

            .pagination .page-item.disabled .page-link {
                background-color: #f5f5f5; /* Light gray for disabled */
                color: #999999; /* Muted gray text */
            }

            .pagination .page-item .page-link:hover {
                background-color: #333333; /* Darker background on hover */
                color: #ffffff;
                border-color: #333333;
            }

</style>


<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.pricePD_id)</th>
            <th>@Html.DisplayNameFor(model => model.RoomTypeId)</th>
            <th>@Html.DisplayNameFor(model => model.dateBegin)</th>
            <th>@Html.DisplayNameFor(model => model.dateEnd)</th>
            <th>@Html.DisplayNameFor(model => model.newPricePerDate)</th>
            <th>@Html.DisplayNameFor(model => model.actState)</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.pricePD_id)</td>
                <th>@Html.DisplayNameFor(model => model.RoomTypeId)</th>
                <td>@item.dateBegin.ToString("dd/MMM/yyyy")</td>
                <td>@item.dateEnd.ToString("dd/MMM/yyyy")</td>
                <td>@item.newPricePerDate.ToString("F2")</td>
                <td>@(item.actState ? "Yes" : "No")</td>
            </tr>
        }
    </tbody>
</table>


