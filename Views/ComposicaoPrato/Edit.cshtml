@model ReserveSystem.Models.Prato

@{
    ViewData["Title"] = "Composição do Prato: " + Model.Nome;
}

<style>
    /* Configuração geral */
    .container {
        max-width: 1000px;
        margin-top: 30px;
    }

    /* Títulos */
    h2 {
        font-size: 2rem;
        color: #007bff;
        text-align: center;
        margin-bottom: 15px;
        font-weight: bold;
    }

    h3 {
        font-size: 1.5rem;
        margin-top: 15px;
        color: #333;
        font-weight: bold;
    }

    /* Tabelas */
    .table {
        margin-top: 15px;
        border: 1px solid #ddd;
        border-radius: 8px;
        background-color: #f9f9f9;
    }

        .table th, .table td {
            text-align: center;
            padding: 8px;
            font-size: 1rem;
            vertical-align: middle;
        }

        .table th {
            background-color: #007bff;
            color: white;
        }

        .table td {
            background-color: #fff;
        }

    /* Botões */
    .btn-primary {
        background-color: #007bff;
        color: white;
        border: none;
        padding: 8px 15px;
        font-size: 0.9rem;
        transition: background-color 0.3s;
    }

        .btn-primary:hover {
            background-color: #0056b3;
        }

    .btn-danger {
        background-color: #dc3545;
        color: white;
        border: none;
        padding: 8px 15px;
        font-size: 0.9rem;
        transition: background-color 0.3s;
    }

        .btn-danger:hover {
            background-color: #c82333;
        }

    .btn-success {
        background-color: #28a745;
        color: white;
        border: none;
        padding: 8px 15px;
        font-size: 0.9rem;
        transition: background-color 0.3s;
    }

        .btn-success:hover {
            background-color: #218838;
        }

    /* Inputs e selects */
    .form-control {
        margin-bottom: 15px;
        font-size: 1rem;
        padding: 10px;
        border-radius: 6px;
        border: 1px solid #ddd;
    }

        .form-control:focus {
            border-color: #007bff;
            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
        }

    .form-group label {
        font-size: 1rem;
        color: #333;
        font-weight: bold;
    }

    /* Formulário */
    .form-group {
        margin-bottom: 15px;
    }

    /* Seção de Adicionar Ingrediente */
    .btn-group {
        display: flex;
        justify-content: center;
    }

    .btn-lg {
        padding: 10px 20px;
        font-size: 1rem;
        width: 140px;
    }

    /* Mensagens de erro */
    .text-danger {
        font-size: 0.8em;
        color: #dc3545;
    }
</style>

<div class="container">
    <h2>Composição do Prato: @Model.Nome</h2>

    <!-- Lista de ingredientes atuais -->
    <h3>Ingredientes Presentes</h3>
    <table class="table">
        <thead>
            <tr>
                <th>Ingrediente</th>
                <th>Quantidade</th>
                <th>Unidade</th>
                <th>Ações</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var composicao in Model.ComposicaoPratos)
            {
                <tr>
                    <td>@composicao.Ingredient.Name</td>
                    <td>@composicao.IngredientQuantity</td>
                    <td>@composicao.Ingredient.UnityRecipe</td>
                    <td>
                        <!-- Botão para remover ingrediente -->
                        <form asp-action="Remove" asp-controller="ComposicaoPrato" method="post">
                            <input type="hidden" name="id" value="@composicao.ComposicaoPratoID" />
                            <button type="submit" class="btn btn-danger btn-sm">Remover</button>
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Formulário para adicionar novo ingrediente -->
    <h3>Adicionar Ingrediente</h3>
    <form asp-action="Add" asp-controller="ComposicaoPrato" method="post">
        <input type="hidden" name="pratoId" value="@Model.PratoId" />
        <div class="form-group">
            <label for="ingredientId">Ingrediente</label>
            <select id="ingredientId" name="ingredientId" class="form-control">
                @foreach (var ingrediente in ViewBag.Ingredients as List<ReserveSystem.Models.Ingredient>)
                {
                    <option value="@ingrediente.IngredientID" data-unidade="@ingrediente.UnityRecipe">@ingrediente.Name</option>
                }
            </select>

            <span id="unidadeSelecionada" class="text-muted"></span>

        </div>

        <div class="form-group">
            <label for="quantity">Quantidade</label>
            <input type="number" step="0.01" id="quantity" name="quantity" class="form-control" />
        </div>

        <div class="btn-group">
            <button type="submit" class="btn btn-success btn-lg">Adicionar</button>
        </div>
    </form>

    <div class="text-center mt-3 mb-5">
        <a asp-controller="Pratos" asp-action="Index" class="btn btn-secondary">Voltar ao Início</a>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const selectElement = document.getElementById("ingredientId");
            const unidadeDisplay = document.getElementById("unidadeSelecionada");

            // Função para atualizar a unidade
            function atualizarUnidade() {
                const selectedOption = selectElement.options[selectElement.selectedIndex];
                const unidade = selectedOption.getAttribute("data-unidade") || "N/A";
                unidadeDisplay.textContent = `Unidade: ${unidade}`;
            }

            // Atualiza a unidade ao mudar o valor do select
            selectElement.addEventListener("change", atualizarUnidade);

            // Atualiza inicialmente para o primeiro item selecionado
            atualizarUnidade();
        });
    </script>
}
