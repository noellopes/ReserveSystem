@model JobsViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Jobs</h1>

<div>
    <a asp-action="Create" class="btn btn-success">Create New</a>
    <button type="button" class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#searchModal">
        Search
    </button>
    @if (!string.IsNullOrEmpty(Model.SearchJobName) || !string.IsNullOrEmpty(Model.SearchJobDescription))
    {
        <a asp-action="Index" class="btn btn-outline-danger">Clear search</a>
    }
</div>

<!-- Search Modal -->
<div class="modal fade" id="searchModal" tabindex="-1" aria-labelledby="searchLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="searchLabel">Search Job</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="Index" method="get">
                <div class="modal-body">
                    <div class="form-group">
                        <label for="searchTitle" class="control-label">Job Name</label>
                        <input name="searchTitle" class="form-control" type="search" value="@Model.SearchJobName" />
                    </div>
                    <div class="form-group">
                        <label for="searchDescription" class="control-label">Job Description</label>
                        <input name="searchDescription" class="form-control" type="search" value="@Model.SearchJobDescription" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Search</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Show a message if no jobs are found after search -->
@if (!Model.Jobs.Any() && (!string.IsNullOrEmpty(Model.SearchJobName) || !string.IsNullOrEmpty(Model.SearchJobDescription)))
{
    <div class="alert alert-info" role="alert">
        No jobs found matching your search criteria.
    </div>
}

<!-- Cards for Jobs -->
@if (Model.Jobs.Any())
{
    <div class="row row-cols-1 row-cols-md-3 g-4">
        @foreach (var item in Model.Jobs)
        {
            <div class="col">
                <div class="card h-100">
                    <div class="card-body">
                        <h5 class="card-title">@Html.DisplayFor(modelItem => item.JobName)</h5>
                        <p class="card-text">@Html.DisplayFor(modelItem => item.JobDescription)</p>
                    </div>
                    <div class="card-footer">
                        <a asp-action="Edit" asp-route-id="@item.JobId" class="btn btn-warning btn-sm">Edit</a>
                        <a asp-action="Details" asp-route-id="@item.JobId" class="btn btn-info btn-sm">Details</a>
                        <a asp-action="Delete" asp-route-id="@item.JobId" class="btn btn-danger btn-sm">Delete</a>
                    </div>
                </div>
            </div>
        }
    </div>
}
else if (string.IsNullOrEmpty(Model.SearchJobName) && string.IsNullOrEmpty(Model.SearchJobDescription))
{
    <!-- This will show only if there are no jobs and no search was applied -->
    <div class="alert alert-warning" role="alert">
        No jobs available to display.
    </div>
}

<!-- Pagination -->
<nav aria-label="JobPagination">
    <ul class="pagination">
        @{
            var cssStyle = "page-item";
            if (Model.PagingInfo.CurrentPage == 1)
            {
                cssStyle += " disabled";
            }
        }
        <li class="@cssStyle">
            <a class="page-link"
               asp-action="Index"
               asp-route-page="1"
               asp-route-searchTitle="@Model.SearchJobName"
               asp-route-searchDescription="@Model.SearchJobDescription">First</a>
        </li>

        @for (int p = Model.PagingInfo.FirstPageShow; p <= Model.PagingInfo.LastPageShow; p++)
        {
            cssStyle = "page-item";
            if (p == Model.PagingInfo.CurrentPage)
            {
                cssStyle += " active";
            }

            <li class="@cssStyle">
                <a class="page-link"
                   asp-action="Index"
                   asp-route-page="@p"
                   asp-route-searchTitle="@Model.SearchJobName"
                   asp-route-searchDescription="@Model.SearchJobDescription">@p</a>
            </li>
        }

        @{
            cssStyle = "page-item";
            if (Model.PagingInfo.CurrentPage == Model.PagingInfo.TotalPages)
            {
                cssStyle += " disabled";
            }
        }
        <li class="@cssStyle">
            <a class="page-link"
               asp-action="Index"
               asp-route-page="@Model.PagingInfo.TotalPages"
               asp-route-searchTitle="@Model.SearchJobName"
               asp-route-searchDescription="@Model.SearchJobDescription">Last</a>
        </li>
    </ul>
</nav>
