@model IEnumerable<ReserveSystem.Models.Transporte>

@{
    ViewData["Title"] = "Transportes";
}

<h1 class="text-center my-4">Index</h1>

<p>
    <form asp-action="Index" method="get" class="d-flex mb-4">
        <input type="text" name="searchString" value="@ViewData["SearchString"]" class="form-control me-2" placeholder="Pesquisar...">
        <button type="submit" class="btn btn-primary">Pesquisar</button>
    </form>
</p>
<p>
    <a asp-action="Create" class="btn btn-primary">Criar novo Transporte</a>
</p>

<div class="table-responsive">
    <table class="table table-striped table-hover text-center align-middle">
        <thead class="table-dark">
            <tr>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["MatriculaSortParm"]" asp-route-searchString="@ViewData["SearchString"]">Matrícula</a>
                </th>
                <th>@Html.DisplayNameFor(model => model.Capacidade)</th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["TipoSortParm"]" asp-route-searchString="@ViewData["SearchString"]">Tipo de Transporte</a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["AnoSortParm"]" asp-route-searchString="@ViewData["SearchString"]">Ano de Fabricação</a>
                </th>
                <th>Descrição do Transporte</th>
                <th>Ações</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Matricula)</td>
                    <td>@Html.DisplayFor(modelItem => item.Capacidade)</td>
                    <td>@Html.DisplayFor(modelItem => item.TipoTransporte)</td>
                    <td>@Html.DisplayFor(modelItem => item.AnoFabricacao)</td>
                    <td>@Html.DisplayFor(modelItem => item.DescricaoTipoTransporte)</td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.TransporteId" class="btn btn-sm btn-warning">Editar</a>
                        <a asp-action="Details" asp-route-id="@item.TransporteId" class="btn btn-sm btn-info text-white">Detalhes</a>
                        <a asp-action="Delete" asp-route-id="@item.TransporteId" class="btn btn-sm btn-danger">Eliminar</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<div class="d-flex justify-content-center mt-4">
    @if (ViewBag.PageInfo != null)
    {
        var pageInfo = (ReserveSystem.Models.PageInfo)ViewBag.PageInfo;

        <nav>
            <ul class="pagination">
                <li class="page-item @(pageInfo.CurrentPage == 1 ? "disabled" : "")">
                    <a class="page-link" asp-action="Index" asp-route-page="@(pageInfo.CurrentPage - 1)" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-searchString="@ViewData["SearchString"]">Anterior</a>
                </li>
                @for (int i = pageInfo.FirstPageShow; i <= pageInfo.LastPageShow; i++)
                {
                    <li class="page-item @(i == pageInfo.CurrentPage ? "active" : "")">
                        <a class="page-link" asp-action="Index" asp-route-page="@i" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-searchString="@ViewData["SearchString"]">@i</a>
                    </li>
                }
                <li class="page-item @(pageInfo.CurrentPage == pageInfo.TotalPages ? "disabled" : "")">
                    <a class="page-link" asp-action="Index" asp-route-page="@(pageInfo.CurrentPage + 1)" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-searchString="@ViewData["SearchString"]">Próxima</a>
                </li>
            </ul>
        </nav>
    }
</div>
