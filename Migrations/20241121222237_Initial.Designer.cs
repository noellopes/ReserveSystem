// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReserveSystem.Data;

#nullable disable

namespace ReserveSystem.Migrations
{
    [DbContext(typeof(ReserveSystemContext))]
    [Migration("20241121222237_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ReserveSystem.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<int>("QuartoId")
                        .HasColumnType("int");

                    b.HasKey("ClientId");

                    b.HasIndex("QuartoId");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("ReserveSystem.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("QuartoId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("QuartoId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("ReserveSystem.Models.Ingredient", b =>
                {
                    b.Property<int>("IngredienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IngredienteId"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("QuantidadeDisponivel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnidadeMedida")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("IngredienteId");

                    b.ToTable("Ingrediente");
                });

            modelBuilder.Entity("ReserveSystem.Models.ItemQuarto", b =>
                {
                    b.Property<int>("ItemQuartoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemQuartoId"));

                    b.Property<int>("QuantidadeQuarto")
                        .HasColumnType("int");

                    b.Property<int?>("QuartoId")
                        .HasColumnType("int");

                    b.HasKey("ItemQuartoId");

                    b.HasIndex("QuartoId");

                    b.ToTable("ItemQuarto");
                });

            modelBuilder.Entity("ReserveSystem.Models.Items", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"));

                    b.Property<int?>("ItemQuartoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuantidadeArmazem")
                        .HasColumnType("int");

                    b.HasKey("ItemId");

                    b.HasIndex("ItemQuartoId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("ReserveSystem.Models.Quarto", b =>
                {
                    b.Property<int>("QuartoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuartoId"));

                    b.HasKey("QuartoId");

                    b.ToTable("Quarto");
                });

            modelBuilder.Entity("ReserveSystem.Models.Client", b =>
                {
                    b.HasOne("ReserveSystem.Models.Quarto", "Quarto")
                        .WithMany("Clients")
                        .HasForeignKey("QuartoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quarto");
                });

            modelBuilder.Entity("ReserveSystem.Models.Employee", b =>
                {
                    b.HasOne("ReserveSystem.Models.Quarto", "Quarto")
                        .WithMany("Employees")
                        .HasForeignKey("QuartoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quarto");
                });

            modelBuilder.Entity("ReserveSystem.Models.ItemQuarto", b =>
                {
                    b.HasOne("ReserveSystem.Models.Quarto", null)
                        .WithMany("ItemQuartos")
                        .HasForeignKey("QuartoId");
                });

            modelBuilder.Entity("ReserveSystem.Models.Items", b =>
                {
                    b.HasOne("ReserveSystem.Models.ItemQuarto", null)
                        .WithMany("Items")
                        .HasForeignKey("ItemQuartoId");
                });

            modelBuilder.Entity("ReserveSystem.Models.ItemQuarto", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("ReserveSystem.Models.Quarto", b =>
                {
                    b.Navigation("Clients");

                    b.Navigation("Employees");

                    b.Navigation("ItemQuartos");
                });
#pragma warning restore 612, 618
        }
    }
}
