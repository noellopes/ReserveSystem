// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReserveSystem.Data;

#nullable disable

namespace ReserveSystem.Migrations
{
    [DbContext(typeof(ReserveSystemContext))]
    [Migration("20250108233606_addSampleData")]
    partial class addSampleData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ReserveSystem.Models.ClienteTestModel", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteId"));

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClienteId");

                    b.ToTable("ClienteTestModel");

                    b.HasData(
                        new
                        {
                            ClienteId = 21,
                            DataNascimento = new DateTime(1985, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "carlos.silva@email.com",
                            Nome = "Carlos Silva",
                            Telefone = "923412453"
                        },
                        new
                        {
                            ClienteId = 22,
                            DataNascimento = new DateTime(1990, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ana.oliveira@email.com",
                            Nome = "Ana Oliveira",
                            Telefone = "998765432"
                        },
                        new
                        {
                            ClienteId = 23,
                            DataNascimento = new DateTime(1982, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "joao.pereira@email.com",
                            Nome = "João Pereira",
                            Telefone = "987654321"
                        },
                        new
                        {
                            ClienteId = 24,
                            DataNascimento = new DateTime(1978, 11, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "maria.souza@email.com",
                            Nome = "Maria Souza",
                            Telefone = "996543210"
                        },
                        new
                        {
                            ClienteId = 25,
                            DataNascimento = new DateTime(1993, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lucas.costa@email.com",
                            Nome = "Lucas Costa",
                            Telefone = "934567890"
                        },
                        new
                        {
                            ClienteId = 26,
                            DataNascimento = new DateTime(1989, 10, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "isabela.almeida@email.com",
                            Nome = "Isabela Almeida",
                            Telefone = "945678901"
                        },
                        new
                        {
                            ClienteId = 27,
                            DataNascimento = new DateTime(1995, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "felipe.rocha@email.com",
                            Nome = "Felipe Rocha",
                            Telefone = "923456789"
                        },
                        new
                        {
                            ClienteId = 28,
                            DataNascimento = new DateTime(1983, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "carla.martins@email.com",
                            Nome = "Carla Martins",
                            Telefone = "911223344"
                        },
                        new
                        {
                            ClienteId = 29,
                            DataNascimento = new DateTime(1990, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "fernando.gomes@email.com",
                            Nome = "Fernando Gomes",
                            Telefone = "997654321"
                        },
                        new
                        {
                            ClienteId = 30,
                            DataNascimento = new DateTime(1988, 9, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "beatriz.santos@email.com",
                            Nome = "Beatriz Santos",
                            Telefone = "968754321"
                        },
                        new
                        {
                            ClienteId = 31,
                            DataNascimento = new DateTime(1992, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ricardo.ferreira@email.com",
                            Nome = "Ricardo Ferreira",
                            Telefone = "954321098"
                        },
                        new
                        {
                            ClienteId = 32,
                            DataNascimento = new DateTime(1994, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "juliana.silva@email.com",
                            Nome = "Juliana Silva",
                            Telefone = "924567890"
                        },
                        new
                        {
                            ClienteId = 33,
                            DataNascimento = new DateTime(1987, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "gabriel.lima@email.com",
                            Nome = "Gabriel Lima",
                            Telefone = "917654321"
                        },
                        new
                        {
                            ClienteId = 34,
                            DataNascimento = new DateTime(1991, 11, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mariana.costa@email.com",
                            Nome = "Mariana Costa",
                            Telefone = "935678902"
                        },
                        new
                        {
                            ClienteId = 35,
                            DataNascimento = new DateTime(1980, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "vitor.hugo@email.com",
                            Nome = "Vitor Hugo",
                            Telefone = "945678901"
                        },
                        new
                        {
                            ClienteId = 36,
                            DataNascimento = new DateTime(1994, 12, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "larissa.oliveira@email.com",
                            Nome = "Larissa Oliveira",
                            Telefone = "923456788"
                        },
                        new
                        {
                            ClienteId = 37,
                            DataNascimento = new DateTime(1993, 1, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "rafael.souza@email.com",
                            Nome = "Rafael Souza",
                            Telefone = "999887777"
                        },
                        new
                        {
                            ClienteId = 38,
                            DataNascimento = new DateTime(1986, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "paula.dias@email.com",
                            Nome = "Paula Dias",
                            Telefone = "912345678"
                        },
                        new
                        {
                            ClienteId = 39,
                            DataNascimento = new DateTime(1992, 8, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "eduardo.rocha@email.com",
                            Nome = "Eduardo Rocha",
                            Telefone = "923456788"
                        },
                        new
                        {
                            ClienteId = 40,
                            DataNascimento = new DateTime(1984, 10, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tatiane.santos@email.com",
                            Nome = "Tatiane Santos",
                            Telefone = "943567890"
                        });
                });

            modelBuilder.Entity("ReserveSystem.Models.ExcursaoFavoritaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExcursaoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ExcursaoId");

                    b.ToTable("ExcursaoFavoritaModel");

                    b.HasData(
                        new
                        {
                            Id = 71,
                            ClienteId = 30,
                            Comentario = "Passeio encantador, perfeito para relaxar.",
                            ExcursaoId = 1
                        },
                        new
                        {
                            Id = 72,
                            ClienteId = 21,
                            Comentario = "Guias excelentes e vistas incríveis!",
                            ExcursaoId = 2
                        },
                        new
                        {
                            Id = 73,
                            ClienteId = 22,
                            Comentario = "Muito divertido, meus filhos adoraram.",
                            ExcursaoId = 3
                        },
                        new
                        {
                            Id = 74,
                            ClienteId = 23,
                            Comentario = "O transporte poderia ser melhor, mas o local era incrível.",
                            ExcursaoId = 4
                        },
                        new
                        {
                            Id = 75,
                            ClienteId = 24,
                            Comentario = "Excelente organização e atenção aos detalhes.",
                            ExcursaoId = 5
                        },
                        new
                        {
                            Id = 76,
                            ClienteId = 25,
                            Comentario = "Lugar deslumbrante, recomendo para casais.",
                            ExcursaoId = 6
                        },
                        new
                        {
                            Id = 77,
                            ClienteId = 26,
                            Comentario = "Um pouco caro, mas valeu a pena.",
                            ExcursaoId = 7
                        },
                        new
                        {
                            Id = 78,
                            ClienteId = 27,
                            Comentario = "Paisagens de tirar o fôlego!",
                            ExcursaoId = 7
                        },
                        new
                        {
                            Id = 79,
                            ClienteId = 28,
                            Comentario = "Foi uma aventura inesquecível.",
                            ExcursaoId = 8
                        },
                        new
                        {
                            Id = 80,
                            ClienteId = 29,
                            Comentario = "Gostei da flexibilidade no roteiro.",
                            ExcursaoId = 9
                        },
                        new
                        {
                            Id = 81,
                            ClienteId = 30,
                            Comentario = "Bom para grupos grandes, bastante espaço.",
                            ExcursaoId = 10
                        },
                        new
                        {
                            Id = 82,
                            ClienteId = 31,
                            Comentario = "Adorei a comida servida durante o passeio.",
                            ExcursaoId = 11
                        },
                        new
                        {
                            Id = 83,
                            ClienteId = 32,
                            Comentario = "O tempo estava ótimo e tudo saiu como planejado.",
                            ExcursaoId = 12
                        },
                        new
                        {
                            Id = 84,
                            ClienteId = 33,
                            Comentario = "Poderiam ter mais informações sobre o local, mas gostei.",
                            ExcursaoId = 13
                        },
                        new
                        {
                            Id = 85,
                            ClienteId = 34,
                            Comentario = "O guia era muito simpático e experiente.",
                            ExcursaoId = 14
                        },
                        new
                        {
                            Id = 86,
                            ClienteId = 35,
                            Comentario = "Recomendo para quem gosta de aprender sobre história.",
                            ExcursaoId = 15
                        },
                        new
                        {
                            Id = 87,
                            ClienteId = 36,
                            Comentario = "Ótimo custo-benefício.",
                            ExcursaoId = 16
                        },
                        new
                        {
                            Id = 88,
                            ClienteId = 37,
                            Comentario = "Muito bem organizado e pontual.",
                            ExcursaoId = 17
                        },
                        new
                        {
                            Id = 89,
                            ClienteId = 38,
                            Comentario = "Lugar paradisíaco, voltarei com certeza!",
                            ExcursaoId = 18
                        },
                        new
                        {
                            Id = 90,
                            ClienteId = 39,
                            Comentario = "Fiquei encantado com o serviço personalizado.",
                            ExcursaoId = 19
                        });
                });

            modelBuilder.Entity("ReserveSystem.Models.ExcursaoModel", b =>
                {
                    b.Property<int>("ExcursaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExcursaoId"));

                    b.Property<DateTime>("Data_Fim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Data_Inicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Preco")
                        .HasColumnType("real");

                    b.Property<int>("StaffId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExcursaoId");

                    b.HasIndex("StaffId");

                    b.ToTable("ExcursaoModel");

                    b.HasData(
                        new
                        {
                            ExcursaoId = 1,
                            Data_Fim = new DateTime(2025, 1, 10, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            Data_Inicio = new DateTime(2025, 1, 10, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Descubra os principais pontos históricos de Lisboa.",
                            Preco = 50f,
                            StaffId = 1,
                            Titulo = "Tour Histórico de Lisboa"
                        },
                        new
                        {
                            ExcursaoId = 2,
                            Data_Fim = new DateTime(2025, 1, 12, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            Data_Inicio = new DateTime(2025, 1, 12, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Explore as melhores vinícolas da região do Douro.",
                            Preco = 75f,
                            StaffId = 2,
                            Titulo = "Rota dos Vinhos do Douro"
                        },
                        new
                        {
                            ExcursaoId = 3,
                            Data_Fim = new DateTime(2025, 1, 15, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            Data_Inicio = new DateTime(2025, 1, 15, 7, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Aproveite uma trilha guiada na Serra da Estrela.",
                            Preco = 60f,
                            StaffId = 3,
                            Titulo = "Caminhada na Serra da Estrela"
                        },
                        new
                        {
                            ExcursaoId = 4,
                            Data_Fim = new DateTime(2025, 1, 18, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Data_Inicio = new DateTime(2025, 1, 18, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Uma experiência relaxante navegando pelo Rio Tejo.",
                            Preco = 40f,
                            StaffId = 4,
                            Titulo = "Passeio de Barco no Rio Tejo"
                        },
                        new
                        {
                            ExcursaoId = 5,
                            Data_Fim = new DateTime(2025, 1, 20, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            Data_Inicio = new DateTime(2025, 1, 20, 9, 30, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Conheça a história do Mosteiro da Batalha.",
                            Preco = 35f,
                            StaffId = 5,
                            Titulo = "Visita ao Mosteiro da Batalha"
                        },
                        new
                        {
                            ExcursaoId = 6,
                            Data_Fim = new DateTime(2025, 1, 22, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            Data_Inicio = new DateTime(2025, 1, 22, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Uma excursão pelos monumentos históricos de Évora.",
                            Preco = 65f,
                            StaffId = 6,
                            Titulo = "Exploração de Évora"
                        },
                        new
                        {
                            ExcursaoId = 7,
                            Data_Fim = new DateTime(2025, 1, 25, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            Data_Inicio = new DateTime(2025, 1, 25, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Capture as vistas incríveis da Serra da Arrábida.",
                            Preco = 80f,
                            StaffId = 7,
                            Titulo = "Safari Fotográfico na Arrábida"
                        },
                        new
                        {
                            ExcursaoId = 8,
                            Data_Fim = new DateTime(2025, 1, 28, 17, 30, 0, 0, DateTimeKind.Unspecified),
                            Data_Inicio = new DateTime(2025, 1, 28, 9, 30, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Explore os palácios e paisagens de Sintra.",
                            Preco = 70f,
                            StaffId = 8,
                            Titulo = "Passeio Cultural em Sintra"
                        },
                        new
                        {
                            ExcursaoId = 9,
                            Data_Fim = new DateTime(2025, 1, 30, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Data_Inicio = new DateTime(2025, 1, 30, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Descubra a culinária local do Porto.",
                            Preco = 50f,
                            StaffId = 9,
                            Titulo = "Tour Gastronômico em Porto"
                        },
                        new
                        {
                            ExcursaoId = 10,
                            Data_Fim = new DateTime(2025, 2, 2, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Data_Inicio = new DateTime(2025, 2, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Um passeio pelas águas e ilhas da Ria Formosa.",
                            Preco = 60f,
                            StaffId = 10,
                            Titulo = "Exploração da Ria Formosa"
                        },
                        new
                        {
                            ExcursaoId = 11,
                            Data_Fim = new DateTime(2025, 2, 5, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Data_Inicio = new DateTime(2025, 2, 5, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Descubra a magia de Lisboa à noite.",
                            Preco = 45f,
                            StaffId = 11,
                            Titulo = "Tour Noturno em Lisboa"
                        },
                        new
                        {
                            ExcursaoId = 12,
                            Data_Fim = new DateTime(2025, 2, 7, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            Data_Inicio = new DateTime(2025, 2, 7, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Visite as Grutas de Mira de Aire e suas formações únicas.",
                            Preco = 30f,
                            StaffId = 12,
                            Titulo = "Exploração Subterrânea em Mira de Aire"
                        },
                        new
                        {
                            ExcursaoId = 13,
                            Data_Fim = new DateTime(2025, 2, 10, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            Data_Inicio = new DateTime(2025, 2, 10, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Explore a natureza e a beleza do Parque Nacional Peneda-Gerês.",
                            Preco = 85f,
                            StaffId = 13,
                            Titulo = "Aventura em Peneda-Gerês"
                        },
                        new
                        {
                            ExcursaoId = 14,
                            Data_Fim = new DateTime(2025, 2, 12, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            Data_Inicio = new DateTime(2025, 2, 12, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Conheça as aldeias encantadoras e cheias de história.",
                            Preco = 95f,
                            StaffId = 14,
                            Titulo = "Passeio pelas Aldeias Históricas de Portugal"
                        },
                        new
                        {
                            ExcursaoId = 15,
                            Data_Fim = new DateTime(2025, 2, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Data_Inicio = new DateTime(2025, 2, 15, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Um passeio inesquecível pelo Rio Douro.",
                            Preco = 55f,
                            StaffId = 15,
                            Titulo = "Cruzeiro no Rio Douro"
                        },
                        new
                        {
                            ExcursaoId = 16,
                            Data_Fim = new DateTime(2025, 2, 18, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Data_Inicio = new DateTime(2025, 2, 18, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Descubra o Alentejo sobre duas rodas.",
                            Preco = 40f,
                            StaffId = 16,
                            Titulo = "Passeio de Bicicleta no Alentejo"
                        },
                        new
                        {
                            ExcursaoId = 17,
                            Data_Fim = new DateTime(2025, 2, 20, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Data_Inicio = new DateTime(2025, 2, 20, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Siga os passos do grande poeta em Lisboa.",
                            Preco = 25f,
                            StaffId = 17,
                            Titulo = "Roteiro Literário de Fernando Pessoa"
                        },
                        new
                        {
                            ExcursaoId = 18,
                            Data_Fim = new DateTime(2025, 2, 23, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            Data_Inicio = new DateTime(2025, 2, 23, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Uma jornada pelos castelos mais icônicos do país.",
                            Preco = 70f,
                            StaffId = 18,
                            Titulo = "Passeio pelos Castelos de Portugal"
                        },
                        new
                        {
                            ExcursaoId = 19,
                            Data_Fim = new DateTime(2025, 2, 25, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            Data_Inicio = new DateTime(2025, 2, 25, 9, 30, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Viva uma experiência única no Algarve.",
                            Preco = 50f,
                            StaffId = 19,
                            Titulo = "Observação de Golfinhos no Algarve"
                        },
                        new
                        {
                            ExcursaoId = 20,
                            Data_Fim = new DateTime(2025, 2, 27, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Data_Inicio = new DateTime(2025, 2, 27, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Descubra a vibrante arte de rua de Lisboa.",
                            Preco = 35f,
                            StaffId = 20,
                            Titulo = "Tour de Arte Urbana em Lisboa"
                        },
                        new
                        {
                            ExcursaoId = 21,
                            Data_Fim = new DateTime(2025, 3, 1, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            Data_Inicio = new DateTime(2025, 3, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Encante-se com as paisagens da amendoeira em flor.",
                            Preco = 75f,
                            StaffId = 21,
                            Titulo = "Rota da Amendoeira em Flor"
                        },
                        new
                        {
                            ExcursaoId = 22,
                            Data_Fim = new DateTime(2025, 3, 3, 18, 30, 0, 0, DateTimeKind.Unspecified),
                            Data_Inicio = new DateTime(2025, 3, 3, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Relaxe nas praias deslumbrantes do Alentejo.",
                            Preco = 65f,
                            StaffId = 22,
                            Titulo = "Passeio pelas Praias do Alentejo"
                        },
                        new
                        {
                            ExcursaoId = 23,
                            Data_Fim = new DateTime(2025, 3, 5, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            Data_Inicio = new DateTime(2025, 3, 5, 9, 30, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Explore a rica história e cultura de Coimbra.",
                            Preco = 40f,
                            StaffId = 23,
                            Titulo = "Tour Histórico em Coimbra"
                        },
                        new
                        {
                            ExcursaoId = 24,
                            Data_Fim = new DateTime(2025, 3, 7, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Data_Inicio = new DateTime(2025, 3, 7, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Uma experiência nas furnas vulcânicas de São Miguel.",
                            Preco = 50f,
                            StaffId = 24,
                            Titulo = "Visita às Furnas de São Miguel"
                        },
                        new
                        {
                            ExcursaoId = 25,
                            Data_Fim = new DateTime(2025, 3, 10, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            Data_Inicio = new DateTime(2025, 3, 10, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Uma excursão marítima inesquecível nas Berlengas.",
                            Preco = 80f,
                            StaffId = 25,
                            Titulo = "Jornada pelas Ilhas Berlengas"
                        });
                });

            modelBuilder.Entity("ReserveSystem.Models.PrecarioModel", b =>
                {
                    b.Property<int>("PrecoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrecoId"));

                    b.Property<DateTime>("Data_Inicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExcursaoId")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Preco")
                        .HasColumnType("real");

                    b.HasKey("PrecoId");

                    b.HasIndex("ExcursaoId");

                    b.ToTable("PrecarioModel");
                });

            modelBuilder.Entity("ReserveSystem.Models.ReservaExcursaoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataReserva")
                        .HasColumnType("DATETIME");

                    b.Property<int>("ExcursaoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumPessoas")
                        .HasColumnType("int");

                    b.Property<float>("ValorTotal")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ExcursaoId");

                    b.ToTable("ReservaExcursaoModel");

                    b.HasData(
                        new
                        {
                            Id = 41,
                            ClienteId = 22,
                            DataReserva = new DateTime(2025, 1, 10, 23, 36, 5, 330, DateTimeKind.Utc).AddTicks(995),
                            ExcursaoId = 1,
                            NumPessoas = 1,
                            ValorTotal = 50f
                        },
                        new
                        {
                            Id = 42,
                            ClienteId = 33,
                            DataReserva = new DateTime(2025, 1, 11, 23, 36, 5, 330, DateTimeKind.Utc).AddTicks(1008),
                            ExcursaoId = 2,
                            NumPessoas = 4,
                            ValorTotal = 200f
                        },
                        new
                        {
                            Id = 43,
                            ClienteId = 24,
                            DataReserva = new DateTime(2025, 1, 12, 23, 36, 5, 330, DateTimeKind.Utc).AddTicks(1010),
                            ExcursaoId = 5,
                            NumPessoas = 3,
                            ValorTotal = 150f
                        },
                        new
                        {
                            Id = 44,
                            ClienteId = 35,
                            DataReserva = new DateTime(2025, 1, 13, 23, 36, 5, 330, DateTimeKind.Utc).AddTicks(1011),
                            ExcursaoId = 6,
                            NumPessoas = 5,
                            ValorTotal = 250f
                        },
                        new
                        {
                            Id = 45,
                            ClienteId = 36,
                            DataReserva = new DateTime(2025, 1, 14, 23, 36, 5, 330, DateTimeKind.Utc).AddTicks(1013),
                            ExcursaoId = 14,
                            NumPessoas = 2,
                            ValorTotal = 120f
                        },
                        new
                        {
                            Id = 46,
                            ClienteId = 27,
                            DataReserva = new DateTime(2025, 1, 15, 23, 36, 5, 330, DateTimeKind.Utc).AddTicks(1015),
                            ExcursaoId = 7,
                            NumPessoas = 1,
                            ValorTotal = 60f
                        },
                        new
                        {
                            Id = 47,
                            ClienteId = 28,
                            DataReserva = new DateTime(2025, 1, 16, 23, 36, 5, 330, DateTimeKind.Utc).AddTicks(1016),
                            ExcursaoId = 8,
                            NumPessoas = 6,
                            ValorTotal = 300f
                        },
                        new
                        {
                            Id = 48,
                            ClienteId = 29,
                            DataReserva = new DateTime(2025, 1, 17, 23, 36, 5, 330, DateTimeKind.Utc).AddTicks(1018),
                            ExcursaoId = 9,
                            NumPessoas = 3,
                            ValorTotal = 180f
                        },
                        new
                        {
                            Id = 49,
                            ClienteId = 31,
                            DataReserva = new DateTime(2025, 1, 18, 23, 36, 5, 330, DateTimeKind.Utc).AddTicks(1020),
                            ExcursaoId = 3,
                            NumPessoas = 2,
                            ValorTotal = 110f
                        },
                        new
                        {
                            Id = 50,
                            ClienteId = 21,
                            DataReserva = new DateTime(2025, 1, 19, 23, 36, 5, 330, DateTimeKind.Utc).AddTicks(1021),
                            ExcursaoId = 15,
                            NumPessoas = 4,
                            ValorTotal = 200f
                        },
                        new
                        {
                            Id = 51,
                            ClienteId = 32,
                            DataReserva = new DateTime(2025, 1, 20, 23, 36, 5, 330, DateTimeKind.Utc).AddTicks(1024),
                            ExcursaoId = 19,
                            NumPessoas = 1,
                            ValorTotal = 50f
                        },
                        new
                        {
                            Id = 52,
                            ClienteId = 33,
                            DataReserva = new DateTime(2025, 1, 21, 23, 36, 5, 330, DateTimeKind.Utc).AddTicks(1026),
                            ExcursaoId = 2,
                            NumPessoas = 5,
                            ValorTotal = 250f
                        },
                        new
                        {
                            Id = 53,
                            ClienteId = 34,
                            DataReserva = new DateTime(2025, 1, 22, 23, 36, 5, 330, DateTimeKind.Utc).AddTicks(1028),
                            ExcursaoId = 16,
                            NumPessoas = 2,
                            ValorTotal = 120f
                        },
                        new
                        {
                            Id = 54,
                            ClienteId = 35,
                            DataReserva = new DateTime(2025, 1, 23, 23, 36, 5, 330, DateTimeKind.Utc).AddTicks(1029),
                            ExcursaoId = 11,
                            NumPessoas = 3,
                            ValorTotal = 150f
                        },
                        new
                        {
                            Id = 55,
                            ClienteId = 23,
                            DataReserva = new DateTime(2025, 1, 24, 23, 36, 5, 330, DateTimeKind.Utc).AddTicks(1031),
                            ExcursaoId = 12,
                            NumPessoas = 2,
                            ValorTotal = 100f
                        },
                        new
                        {
                            Id = 56,
                            ClienteId = 21,
                            DataReserva = new DateTime(2025, 1, 25, 23, 36, 5, 330, DateTimeKind.Utc).AddTicks(1032),
                            ExcursaoId = 17,
                            NumPessoas = 4,
                            ValorTotal = 200f
                        },
                        new
                        {
                            Id = 57,
                            ClienteId = 28,
                            DataReserva = new DateTime(2025, 1, 26, 23, 36, 5, 330, DateTimeKind.Utc).AddTicks(1034),
                            ExcursaoId = 19,
                            NumPessoas = 6,
                            ValorTotal = 300f
                        },
                        new
                        {
                            Id = 58,
                            ClienteId = 29,
                            DataReserva = new DateTime(2025, 1, 27, 23, 36, 5, 330, DateTimeKind.Utc).AddTicks(1036),
                            ExcursaoId = 12,
                            NumPessoas = 2,
                            ValorTotal = 110f
                        },
                        new
                        {
                            Id = 59,
                            ClienteId = 40,
                            DataReserva = new DateTime(2025, 1, 28, 23, 36, 5, 330, DateTimeKind.Utc).AddTicks(1037),
                            ExcursaoId = 13,
                            NumPessoas = 3,
                            ValorTotal = 150f
                        },
                        new
                        {
                            Id = 60,
                            ClienteId = 21,
                            DataReserva = new DateTime(2025, 1, 9, 23, 36, 5, 330, DateTimeKind.Utc).AddTicks(1039),
                            ExcursaoId = 22,
                            NumPessoas = 2,
                            ValorTotal = 100f
                        });
                });

            modelBuilder.Entity("ReserveSystem.Models.StaffModel", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffId"));

                    b.Property<string>("Job_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Staff_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StaffId");

                    b.ToTable("StaffModel");

                    b.HasData(
                        new
                        {
                            StaffId = 1,
                            Job_Name = "Motorista",
                            Staff_Name = "João Silva"
                        },
                        new
                        {
                            StaffId = 2,
                            Job_Name = "Gestor de Excursão",
                            Staff_Name = "Maria Oliveira"
                        },
                        new
                        {
                            StaffId = 3,
                            Job_Name = "Guia Turistico",
                            Staff_Name = "Carlos Santos"
                        },
                        new
                        {
                            StaffId = 4,
                            Job_Name = "Motorista",
                            Staff_Name = "Ana Souza"
                        },
                        new
                        {
                            StaffId = 5,
                            Job_Name = "Gestor de Excursão",
                            Staff_Name = "Pedro Almeida"
                        },
                        new
                        {
                            StaffId = 6,
                            Job_Name = "Guia Turistico",
                            Staff_Name = "Luciana Costa"
                        },
                        new
                        {
                            StaffId = 7,
                            Job_Name = "Motorista",
                            Staff_Name = "Rafael Gomes"
                        },
                        new
                        {
                            StaffId = 8,
                            Job_Name = "Gestor de Excursão",
                            Staff_Name = "Fernanda Carvalho"
                        },
                        new
                        {
                            StaffId = 9,
                            Job_Name = "Guia Turistico",
                            Staff_Name = "Ricardo Pereira"
                        },
                        new
                        {
                            StaffId = 10,
                            Job_Name = "Motorista",
                            Staff_Name = "Juliana Mendes"
                        },
                        new
                        {
                            StaffId = 11,
                            Job_Name = "Gestor de Excursão",
                            Staff_Name = "Gustavo Rocha"
                        },
                        new
                        {
                            StaffId = 12,
                            Job_Name = "Guia Turistico",
                            Staff_Name = "Camila Ribeiro"
                        },
                        new
                        {
                            StaffId = 13,
                            Job_Name = "Motorista",
                            Staff_Name = "André Lima"
                        },
                        new
                        {
                            StaffId = 14,
                            Job_Name = "Gestor de Excursão",
                            Staff_Name = "Patrícia Fonseca"
                        },
                        new
                        {
                            StaffId = 15,
                            Job_Name = "Guia Turistico",
                            Staff_Name = "Tiago Martins"
                        },
                        new
                        {
                            StaffId = 16,
                            Job_Name = "Motorista",
                            Staff_Name = "Letícia Freitas"
                        },
                        new
                        {
                            StaffId = 17,
                            Job_Name = "Gestor de Excursão",
                            Staff_Name = "Bruno Vieira"
                        },
                        new
                        {
                            StaffId = 18,
                            Job_Name = "Guia Turistico",
                            Staff_Name = "Sara Fernandes"
                        },
                        new
                        {
                            StaffId = 19,
                            Job_Name = "Motorista",
                            Staff_Name = "Rodrigo Lopes"
                        },
                        new
                        {
                            StaffId = 20,
                            Job_Name = "Gestor de Excursão",
                            Staff_Name = "Natália Correia"
                        },
                        new
                        {
                            StaffId = 21,
                            Job_Name = "Guia Turistico",
                            Staff_Name = "Eduardo Cardoso"
                        },
                        new
                        {
                            StaffId = 22,
                            Job_Name = "Motorista",
                            Staff_Name = "Carolina Neves"
                        },
                        new
                        {
                            StaffId = 23,
                            Job_Name = "Gestor de Excursão",
                            Staff_Name = "Diego Farias"
                        },
                        new
                        {
                            StaffId = 24,
                            Job_Name = "Guia Turistico",
                            Staff_Name = "Vanessa Moreira"
                        },
                        new
                        {
                            StaffId = 25,
                            Job_Name = "Motorista",
                            Staff_Name = "Felipe Azevedo"
                        });
                });

            modelBuilder.Entity("ReserveSystem.Models.ExcursaoFavoritaModel", b =>
                {
                    b.HasOne("ReserveSystem.Models.ClienteTestModel", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReserveSystem.Models.ExcursaoModel", "Excursao")
                        .WithMany()
                        .HasForeignKey("ExcursaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Excursao");
                });

            modelBuilder.Entity("ReserveSystem.Models.ExcursaoModel", b =>
                {
                    b.HasOne("ReserveSystem.Models.StaffModel", "Staff")
                        .WithMany("Excursao")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("ReserveSystem.Models.PrecarioModel", b =>
                {
                    b.HasOne("ReserveSystem.Models.ExcursaoModel", "Excursao")
                        .WithMany("Precario")
                        .HasForeignKey("ExcursaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Excursao");
                });

            modelBuilder.Entity("ReserveSystem.Models.ReservaExcursaoModel", b =>
                {
                    b.HasOne("ReserveSystem.Models.ClienteTestModel", "Cliente")
                        .WithMany("ReservaExcursoes")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReserveSystem.Models.ExcursaoModel", "Excursao")
                        .WithMany("ReservaExcursoes")
                        .HasForeignKey("ExcursaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Excursao");
                });

            modelBuilder.Entity("ReserveSystem.Models.ClienteTestModel", b =>
                {
                    b.Navigation("ReservaExcursoes");
                });

            modelBuilder.Entity("ReserveSystem.Models.ExcursaoModel", b =>
                {
                    b.Navigation("Precario");

                    b.Navigation("ReservaExcursoes");
                });

            modelBuilder.Entity("ReserveSystem.Models.StaffModel", b =>
                {
                    b.Navigation("Excursao");
                });
#pragma warning restore 612, 618
        }
    }
}
