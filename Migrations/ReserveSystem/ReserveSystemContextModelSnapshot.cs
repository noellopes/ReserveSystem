// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReserveSystem.Data;

#nullable disable

namespace ReserveSystem.Migrations.ReserveSystem
{
    [DbContext(typeof(ReserveSystemContext))]
    partial class ReserveSystemContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("ReserveSystem.Models.Booking", b =>
                {
                    b.Property<int>("BookingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("BookedState")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("ClientID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumberOfGuests")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Payment")
                        .HasColumnType("INTEGER");

                    b.HasKey("BookingID");

                    b.HasIndex("ClientID");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("ReserveSystem.Models.Client", b =>
                {
                    b.Property<int>("ClientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Client_Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Client_Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Client_Login")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Client_Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Client_Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Client_Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Client_Tax_Id")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ClientID");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("ReserveSystem.Models.Job", b =>
                {
                    b.Property<int>("JobID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("JobDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("JobName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("JobID");

                    b.ToTable("Job");
                });

            modelBuilder.Entity("ReserveSystem.Models.Room", b =>
                {
                    b.Property<int>("RoomID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoomType")
                        .HasColumnType("INTEGER");

                    b.HasKey("RoomID");

                    b.ToTable("Room");
                });

            modelBuilder.Entity("ReserveSystem.Models.RoomBooking", b =>
                {
                    b.Property<int>("RoomBookingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BookingID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumberOfGuests")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoomID")
                        .HasColumnType("INTEGER");

                    b.HasKey("RoomBookingID");

                    b.HasIndex("BookingID");

                    b.HasIndex("RoomID");

                    b.ToTable("RoomBooking");
                });

            modelBuilder.Entity("ReserveSystem.Models.RoomService", b =>
                {
                    b.Property<int>("RoomServiceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("JobID")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("RoomServiceActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RoomServiceDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RoomServiceDuration")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RoomServiceName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("RoomServicePrice")
                        .HasColumnType("REAL");

                    b.HasKey("RoomServiceID");

                    b.HasIndex("JobID");

                    b.ToTable("RoomService");
                });

            modelBuilder.Entity("ReserveSystem.Models.RoomServicesBooking", b =>
                {
                    b.Property<int>("RoomServicesBookingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("AmountToPay")
                        .HasColumnType("TEXT");

                    b.Property<bool>("BookedState")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClientFeedback")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PaymentMade")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoomID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoomServiceID")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("StaffConfirmation")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StaffID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("RoomServicesBookingID");

                    b.HasIndex("ClientID");

                    b.HasIndex("RoomID");

                    b.HasIndex("RoomServiceID");

                    b.HasIndex("StaffID");

                    b.ToTable("RoomServiceBooking");
                });

            modelBuilder.Entity("ReserveSystem.Models.Schedule", b =>
                {
                    b.Property<int>("ScheduleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Available")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Present")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ShiftEndTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ShiftStartTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("StaffID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TypeOfSchedule")
                        .HasColumnType("INTEGER");

                    b.HasKey("ScheduleID");

                    b.HasIndex("StaffID");

                    b.ToTable("Schedule");
                });

            modelBuilder.Entity("ReserveSystem.Models.Staff", b =>
                {
                    b.Property<int>("StaffID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DismissalDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("JobID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StaffEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StaffName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StaffPassword")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StaffPhone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("VacationDays")
                        .HasColumnType("INTEGER");

                    b.HasKey("StaffID");

                    b.HasIndex("JobID");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("ReserveSystem.Models.Booking", b =>
                {
                    b.HasOne("ReserveSystem.Models.Client", "Client")
                        .WithMany("Bookings")
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("ReserveSystem.Models.RoomBooking", b =>
                {
                    b.HasOne("ReserveSystem.Models.Booking", "Booking")
                        .WithMany("RoomBookings")
                        .HasForeignKey("BookingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReserveSystem.Models.Room", "Room")
                        .WithMany("RoomBookings")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("ReserveSystem.Models.RoomService", b =>
                {
                    b.HasOne("ReserveSystem.Models.Job", "Job")
                        .WithMany("RoomServices")
                        .HasForeignKey("JobID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");
                });

            modelBuilder.Entity("ReserveSystem.Models.RoomServicesBooking", b =>
                {
                    b.HasOne("ReserveSystem.Models.Client", "Client")
                        .WithMany("RoomServicesBookings")
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReserveSystem.Models.Room", "Room")
                        .WithMany("RoomServicesBookings")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReserveSystem.Models.RoomService", "RoomService")
                        .WithMany("RoomServicesBookings")
                        .HasForeignKey("RoomServiceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReserveSystem.Models.Staff", "Staff")
                        .WithMany("RoomServicesBookings")
                        .HasForeignKey("StaffID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Room");

                    b.Navigation("RoomService");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("ReserveSystem.Models.Schedule", b =>
                {
                    b.HasOne("ReserveSystem.Models.Staff", "Staff")
                        .WithMany("Schedules")
                        .HasForeignKey("StaffID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("ReserveSystem.Models.Staff", b =>
                {
                    b.HasOne("ReserveSystem.Models.Job", "Job")
                        .WithMany("Staffs")
                        .HasForeignKey("JobID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");
                });

            modelBuilder.Entity("ReserveSystem.Models.Booking", b =>
                {
                    b.Navigation("RoomBookings");
                });

            modelBuilder.Entity("ReserveSystem.Models.Client", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("RoomServicesBookings");
                });

            modelBuilder.Entity("ReserveSystem.Models.Job", b =>
                {
                    b.Navigation("RoomServices");

                    b.Navigation("Staffs");
                });

            modelBuilder.Entity("ReserveSystem.Models.Room", b =>
                {
                    b.Navigation("RoomBookings");

                    b.Navigation("RoomServicesBookings");
                });

            modelBuilder.Entity("ReserveSystem.Models.RoomService", b =>
                {
                    b.Navigation("RoomServicesBookings");
                });

            modelBuilder.Entity("ReserveSystem.Models.Staff", b =>
                {
                    b.Navigation("RoomServicesBookings");

                    b.Navigation("Schedules");
                });
#pragma warning restore 612, 618
        }
    }
}
